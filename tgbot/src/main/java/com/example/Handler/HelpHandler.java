package com.example.Handler;

import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.Update;

import com.example.bot.Executer;

@Component
public class HelpHandler implements IHandle {

    private final Executer executer;

    public HelpHandler(Executer executer) {
        this.executer = executer;
    }

    @Override
    public void handle(Update update) {
        String helpTo = update.getMessage().getText();
        long userId = Long.valueOf(update.getMessage().getChatId());
        String answer = "";

        if (helpTo.equals(this.getName())) {
            StringBuilder helpMessage = new StringBuilder("üîç–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ üîç\n");
            for (IHandle command : Handlers.commands.values()) {
                helpMessage.append(command.getName()).append("\n");
            }
            answer = helpMessage.toString();
        } else {
            int spaceIndex = helpTo.indexOf(" ");
            helpTo = "/" + helpTo.substring(spaceIndex).trim();
            IHandle commandName = Handlers.commands.get(helpTo);
            if (commandName != null) {
                answer = commandName.getInfo();

            } else {
                answer = "‚ùå —Ç–∞–∫–æ–π –∫–æ–º–º–∞–Ω–¥—ã –Ω–µ—Ç ‚ùå\n" +
                        "–í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è /help, —á—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫–∏–µ –∫–æ–º–º–∞–Ω–¥—ã –µ—Å—Ç—å";
            }
        }
        executer.sendMessage(answer, userId);
    }

    @Override
    public String getInfo() {
        String answer = "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–±–æ—Ç–µ –∫–æ–º–∞–Ω–¥—ã \n –Ω–∞–ø–∏—à–∏—Ç–µ" +
                " /help '–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã' –∏ –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ –µ—ë —Ä–∞–±–æ—Ç—ã–µ";
        return answer;
    }

    @Override
    public String getName() {
        return "/help";
    }

}
